##Config Map and Secretes

Both are API Objects
Config MAP Stores Non SenSitive Info
Secret Store Sensitive info like DB Passwords, ssh keys, tokens

Command for Config MAP:

Kubectl get configmap

Kubectl create configmap app-config --from-literal=app_name=myapp --from-literal=app_port=8080

Create Sample POD:

Vi nginx-pod-configmap.yaml


apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod
spec:
  containers:
    - name: nginx
      image: nginx:latest
      envFrom:
        - configMapRef:
            name: app-config
      ports:
        - containerPort: 80

Kubectl exec -it nginx-pod -- env

EKS $ kubectl exec -it nginx-pod -- env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=nginx-pod
NGINX_VERSION=1.27.3
NJS_VERSION=0.8.7
NJS_RELEASE=1~bookworm
PKG_RELEASE=1~bookworm
DYNPKG_RELEASE=1~bookworm
app_port=8080
app_name=myapp
KUBERNETES_PORT_443_TCP=tcp://10.100.0.1:443
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.100.0.1
NGINX_SERVICE_PORT_80_TCP_PROTO=tcp
NGINX_SERVICE_PORT=tcp://10.100.194.188:80
NGINX_SERVICE_PORT_80_TCP_PORT=80
KUBERNETES_SERVICE_HOST=10.100.0.1
KUBERNETES_SERVICE_PORT=443
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP_PROTO=tcp
NGINX_SERVICE_SERVICE_HOST=10.100.194.188
NGINX_SERVICE_SERVICE_PORT=80
KUBERNETES_PORT=tcp://10.100.0.1:443
NGINX_SERVICE_PORT_80_TCP=tcp://10.100.194.188:80
NGINX_SERVICE_PORT_80_TCP_ADDR=10.100.194.188
TERM=xterm
HOME=/root

Kubectl exec -it nginx-pod -- sh

#env
# env
KUBERNETES_SERVICE_PORT=443
KUBERNETES_PORT=tcp://10.100.0.1:443
app_port=8080
HOSTNAME=nginx-pod
app_name=myapp
HOME=/root
NGINX_SERVICE_PORT_80_TCP=tcp://10.100.194.188:80
PKG_RELEASE=1~bookworm
DYNPKG_RELEASE=1~bookworm
TERM=xterm
NGINX_VERSION=1.27.3
KUBERNETES_PORT_443_TCP_ADDR=10.100.0.1
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_SERVICE_SERVICE_HOST=10.100.194.188
NJS_VERSION=0.8.7
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_PROTO=tcp
NJS_RELEASE=1~bookworm
NGINX_SERVICE_PORT=tcp://10.100.194.188:80
NGINX_SERVICE_SERVICE_PORT=80
KUBERNETES_PORT_443_TCP=tcp://10.100.0.1:443
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_SERVICE_HOST=10.100.0.1
PWD=/
NGINX_SERVICE_PORT_80_TCP_ADDR=10.100.194.188
NGINX_SERVICE_PORT_80_TCP_PORT=80
NGINX_SERVICE_PORT_80_TCP_PROTO=tcp

##Create Secret

kubectl create secret generic db-credentials --from-literal=username=admin --from-literal=password=secret123

EKS $ kubectl describe secrets db-credentials 

Name:         db-credentials
Namespace:    default
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
password:  9 bytes
username:  5 bytes

Vi mynewpod.yaml

apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod-new
spec:
  containers:
    - name: nginx
      image: nginx:latest
      env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password

